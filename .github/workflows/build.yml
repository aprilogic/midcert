name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            arch: amd64
          - os: windows-latest
            goos: windows
            arch: amd64
          - os: macos-13
            goos: darwin
            arch: amd64
          - os: macos-latest
            goos: darwin
            arch: arm64


    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -v -o midcert-${{ matrix.goos == 'windows-latest' && '.exe' || '' }}

      - name: Test
        run: |
          go test -v ./...

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: midcert-${{ matrix.goos }}-${{ matrix.arch }}
          path: midcert-${{ matrix.goos == 'windows-latest' && '.exe' || '' }}
          retention-days: 5

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: midcert-*

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/midcert-*
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            MidCert executables for various platforms:
            - Linux (amd64)
            - Windows (amd64)
            - macOS (amd64)
            - macOS (arm64)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 